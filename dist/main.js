const c="critically-fumbled",b={boolean:[{key:"playersOnly",name:"Players Only",hint:"Only trigger tables for player-owned actors",default:!1},{key:"checkSaves",name:"Check Saving Throws",hint:"Also trigger on natural 1s and 20s for saving throws",default:!1},{key:"checkAbility",name:"Check Ability Checks",hint:"Also trigger on natural 1s and 20s for ability checks",default:!1},{key:"checkManualRolls",name:"Check Manual Rolls",hint:"Also trigger on min/max values for manual dice rolls (no character)",default:!1}],table:["meleeCrit","meleeFumble","rangedCrit","rangedFumble","spellCrit","spellFumble","saveCrit","saveFumble","abilityCrit","abilityFumble","manualCrit","manualFumble"]};async function U(e){if(e)try{const t=await fromUuid(e);ui.notifications[t?.name?"info":"warn"](t?.name?`Table found: ${t.name}`:"Invalid UUID")}catch{ui.notifications.error("Could not resolve UUID")}}function O(e){return e.replace(/([A-Z])/g," $1").replace(/^./,t=>t.toUpperCase()).replace(" Crit"," Critical").replace(" Fumble"," Fumble")+" Table UUID"}function S(){b.boolean.forEach(({key:e,name:t,hint:n,default:r})=>{game.settings.register(c,e,{name:t,hint:n,scope:"world",config:!0,type:Boolean,default:r})}),b.table.forEach(e=>{game.settings.register(c,e,{name:O(e),hint:`UUID of the RollTable for ${e.toLowerCase().replace(/crit|fumble/,t=>t==="crit"?"critical hits":"fumbles")}`,scope:"world",config:!0,type:String,default:"",onChange:U})})}const u=e=>game.settings.get(c,e),A={mwak:"melee",rwak:"ranged",msak:"spell",rsak:"spell"},L=["ability check","skill check","acrobatics","athletics","deception","history","insight","intimidation","investigation","medicine","nature","perception","performance","persuasion","religion","sleight","stealth","survival","arcana","animal handling"];function R(e){if(!e.rolls?.length)return null;const t=e.rolls[0];if(E(t,e))return null;const n=N(e),r=t.dice?.find(i=>i.faces===20);return n&&r?.results?.length?P(r,t,n,e):u("checkManualRolls")?G(t,e):null}function E(e,t){return!!(e.options?.table||e._formula?.includes("RollTable")||t.flags?.core?.RollTable)}function N(e){return e.speaker?.actor?game.actors?.get(e.speaker.actor):null}function P(e,t,n,r){const i=v(e,t),a=i===20,o=i===1;if(!a&&!o)return null;const s=_(`${r.content||""} ${r.flavor||""}`);return s?{actor:n,category:s,isCrit:a,isFumble:o,naturalRoll:i,speaker:r.speaker}:null}function G(e,t){const n=e.dice?.[0];if(!n?.results?.length)return null;const r=v(n,e),i=r===n.faces,a=r===1;return!i&&!a?null:{actor:null,category:"manual",isCrit:i,isFumble:a,naturalRoll:r,speaker:t.speaker,dieInfo:{value:r,faces:n.faces}}}function H(e,t){if(!e.actor)return!0;const n=Object.keys(e.actor.ownership||{}).filter(i=>{const a=game.users.find(o=>o.id===i);return e.actor.ownership[i]===3&&i!=="default"&&a&&!a.isGM}),r=n.find(i=>game.users.find(a=>a.id===i&&a.active));return n.length>0?n.includes(t)||!r&&game.user.isGM:game.user.isGM}function B(e,t){if(!e.actor)return!0;const n=Object.keys(e.actor.ownership||{}).filter(i=>{const a=game.users.find(o=>o.id===i);return e.actor.ownership[i]===3&&i!=="default"&&a&&!a.isGM}),r=game.users.find(i=>i.id===t);return n.includes(t)||r&&r.isGM}function v(e,t){if(e.results.length===1)return e.results[0].result;const n=e.results.map(r=>r.result);return t.options?.advantageMode===-1?Math.min(...n):Math.max(...n)}function _(e){const t=e.toLowerCase();return u("checkSaves")&&t.includes("saving throw")?"save":u("checkAbility")&&L.some(n=>t.includes(n))?"ability":null}function z(e){return A[e]||null}function D(e){return e&&(!u("playersOnly")||e.hasPlayerOwner)}const p={save:"saving throw",ability:"ability check",melee:"melee attack",ranged:"ranged attack",spell:"spell attack",manual:"manual roll"},h={CRIT:{border:"#4CAF50",bg:"76,175,80"},FUMBLE:{border:"#f72525ff",bg:"255,107,107"}},y={CRIT:"#008000",FUMBLE:"#FF0000"},C={save:{crit:"critically succeeded on",fumble:"critically failed"},attack:{crit:"critically hit",fumble:"fumbled"}};function T(e){return e?h.CRIT:h.FUMBLE}function Y(e){return e.category==="manual"?game.user?.name||e.speaker?.alias||"Someone":e.actor?.name||e.speaker?.alias||"Someone"}function j(e){return e==="save"||e==="ability"}function q(e){const t=Y(e);if(e.category==="manual"&&e.dieInfo)return`${t} rolled ${e.dieInfo.value} out of d${e.dieInfo.faces} on ${p.manual}!`;const n=j(e.category),r=n?C.save:C.attack,i=e.isCrit?r.crit:r.fumble;return`${t} ${i} ${n?"":"with"} ${p[e.category]}!`.replace(/\s+/g," ")}function w(e,t,n){return`<div style="border: 2px solid ${t.border}; padding: 10px; margin: 5px; border-radius: 5px; background: rgba(${t.bg}, 0.1);">
    <h4 style="text-align: center; margin: 0 0 10px 0;">${e}</h4>
    <div id="crit-fumble-content">${n}</div>
  </div>`}function K(e,t,n,r){const i=r?y.CRIT:y.FUMBLE;return`<div style="background: rgba(${n}, 0.1); padding: 10px; margin: 5px; border-radius: 5px;">
    <p style="text-align: center; margin: 5px 0;"><strong>Rolled</strong></p>
    <h4 style="text-align: center; margin: 5px 0; color: ${i};"><strong>${e}</strong></h4>
    <p style="text-align: center; margin: 15px 0 5px 0;"><strong>Effect</strong></p>
    <div style="text-align: center; margin: 5px 0;">${t}</div>
  </div>`}function V(e,t,n){return`<div style="text-align: center;">
    <button class="crit-fumble-roll-btn" data-table-uuid="${e}" 
            style="display: block; padding: 8px 16px; margin: 5px auto; background: ${n}; 
                   color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: bold;">
      ðŸŽ² Roll ${t}
    </button>
  </div>`}async function d(e){try{const t=await W(e);if(!t)return;const n=T(e.isCrit),r=q(e),i=V(t.uuid,t.name,n.border);await ChatMessage.create({content:w(r,n,i),speaker:e.speaker,flags:{[c]:{isModuleGenerated:!0}}})}catch{}}async function W(e){const t=u(`${e.category}${e.isCrit?"Crit":"Fumble"}`);if(!t)return null;const n=await fromUuid(t);return!n?.documentName||n.documentName!=="RollTable"?null:{uuid:t,name:n.name}}async function Z(e){try{if(!e?.attackRoll&&!e?.item||!D(e.actor))return;const t=!!e.isCritical,n=!!e.isFumble;if(!t&&!n)return;const r=z(e.item?.system?.actionType||"mwak")||"melee";await d({actor:e.actor,category:r,isCrit:t,isFumble:n,naturalRoll:t?20:1,speaker:ChatMessage.getSpeaker({actor:e.actor})})}catch{}}async function J(e){if(!(!e?.rolls?.length||e.flags?.[c]?.isModuleGenerated||e.flags?.[c]?.isTableRoll))try{await new Promise(r=>setTimeout(r,100));const t=R(e);if(!t||!H(t,game.user.id))return;const n=e.author?.id||e.user?.id;if(!t.actor&&n!==game.user.id)return;t.category==="manual"?setTimeout(()=>d(t).catch(()=>{}),2500):await d(t)}catch{}}const Q="modules/critically-fumbled/assets/sounds/dice_roll.ogg";function M(){return!!game.dice3d}async function k(){try{const e=new Audio(Q);e.volume=.7,e.currentTime=0,await e.play()}catch{}}async function X(e){if(M())try{await game.dice3d.showForRoll(e,game.user,!0)}catch{await k(),await new Promise(n=>setTimeout(n,2e3))}else await k(),await new Promise(t=>setTimeout(t,2e3))}async function ee(e,t,n,r){const i=e.total;if(!i){ui.notifications.error("Roll failed to produce a result");return}const a=t.results.find(g=>{const[F,I]=g.range;return i>=F&&i<=I});if(!a){ui.notifications.error(`No table result found for roll: ${i}`);return}const s=n.closest(".message")?.dataset?.messageId;if(!s){ui.notifications.error("Could not find message ID");return}const l=game.messages?.get(s);if(!l){ui.notifications.error("Could not find original message");return}const f=l.content.includes("#4CAF50"),m=T(f),x=(l.content.match(/<h4[^>]*>([^<]+)<\/h4>/)?.[1]||"Roll Result").replace(/[<>"'&]/g,""),$=(a.description||a.name||a.getChatText()||"").toString();await l.update({content:w(x,m,K(i,$,m.bg,f))})}async function te(e,t){try{const n=new Roll(e.formula||"1d100");await n.evaluate(),t.disabled=!0,t.style.opacity="0.7",t.textContent="ðŸŽ² Rolling...",await X(n),t.textContent="âœ“ Rolled!",await ee(n,e,t,null)}catch{ui.notifications.error("Failed to roll table"),t.disabled=!1,t.style.opacity="1",t.textContent=`ðŸŽ² Roll ${e.name||"Table"}`}}function ne(){const e=async t=>{const n=t.target;if(!n?.classList?.contains("crit-fumble-roll-btn"))return;t.preventDefault(),t.stopPropagation();const r=n.closest(".message");if(!r)return;const i=r.dataset?.messageId;if(!i)return;const a=game.messages?.get(i);if(!a)return;const o=R(a);if(o&&!B(o,game.user.id)){ui.notifications.warn(o.actor?"Only the character owner or GM can roll this table":"Permission denied");return}const s=n.dataset.tableUuid;if(!s){ui.notifications.error("No table UUID found on button");return}try{const l=await fromUuid(s);l?.documentName==="RollTable"?await te(l,n):ui.notifications.error("Invalid table or not a RollTable")}catch{ui.notifications.error("Failed to roll table")}};document.addEventListener("click",e),globalThis.critFumbleClickHandler=e}Hooks.once("init",S);Hooks.once("ready",()=>{ne(),Hooks.on("midi-qol.AttackRollComplete",Z),Hooks.on("createChatMessage",J);const e=M()?"with Dice So Nice integration":"using custom dice sounds for table rolls";console.info(`[${c}] Loaded ${e}`)});Hooks.on("hotReload",()=>{const e=globalThis.critFumbleClickHandler;e&&(document.removeEventListener("click",e),globalThis.critFumbleClickHandler=null)});
