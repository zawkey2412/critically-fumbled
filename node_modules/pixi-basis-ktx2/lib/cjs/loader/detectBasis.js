"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectBasis = void 0;
/* eslint-disable @typescript-eslint/require-await */
const core_1 = require("@pixi/core");
const BasisParser_1 = require("./BasisParser");
exports.detectBasis = {
    extension: {
        type: core_1.ExtensionType.DetectionParser,
        priority: 3,
    },
    test: () => __awaiter(void 0, void 0, void 0, function* () { return !!(BasisParser_1.BasisParser.basisBinding && BasisParser_1.BasisParser.TranscoderWorker.wasmSource); }),
    add: (formats) => __awaiter(void 0, void 0, void 0, function* () { return [...formats, 'basis']; }),
    remove: (formats) => __awaiter(void 0, void 0, void 0, function* () { return formats.filter((f) => f !== 'basis'); }),
};
core_1.extensions.add(exports.detectBasis);
//# sourceMappingURL=detectBasis.js.map